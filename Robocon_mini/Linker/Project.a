;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.0 Professional
;Automatic Program Generator
;© Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 20/10/2016
;Author  : NeVaDa
;Company :
;Comments:
;
;
;Chip type               : ATmega16
;Program type            : Application
;AVR Core Clock frequency: 16.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*****************************************************/
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include "file1.h"
;
;
;
;
;// Declare your global variables here
;
;unsigned char x=0;
;
;
;
;
;void main(void)
; 0000 0027 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0028 // Declare your local variables here
; 0000 0029 
; 0000 002A // Input/Output Ports initialization
; 0000 002B // Port A initialization
; 0000 002C // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 002D // State7=P State6=P State5=P State4=P State3=P State2=P State1=P State0=P
; 0000 002E PORTA=0xFF;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 002F DDRA=0x00;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0030 
; 0000 0031 // Port B initialization
; 0000 0032 // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 0033 // State7=0 State6=0 State5=0 State4=0 State3=0 State2=0 State1=0 State0=0
; 0000 0034 PORTB=0x00;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0035 DDRB=0xFF;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0036 
; 0000 0037 // Port C initialization
; 0000 0038 // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 0039 // State7=0 State6=0 State5=0 State4=0 State3=0 State2=0 State1=0 State0=0
; 0000 003A PORTC=0x00;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 003B DDRC=0xFF;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 003C 
; 0000 003D // Port D initialization
; 0000 003E // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 003F // State7=0 State6=0 State5=0 State4=0 State3=0 State2=0 State1=0 State0=0
; 0000 0040 PORTD=0x00;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0041 DDRD=0xFF;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0042 
; 0000 0043 // Timer/Counter 0 initialization
; 0000 0044 // Clock source: System Clock
; 0000 0045 // Clock value: Timer 0 Stopped
; 0000 0046 // Mode: Normal top=0xFF
; 0000 0047 // OC0 output: Disconnected
; 0000 0048 TCCR0=0x00;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0049 TCNT0=0x00;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 004A OCR0=0x00;
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 004B 
; 0000 004C // Timer/Counter 1 initialization
; 0000 004D // Clock source: System Clock
; 0000 004E // Clock value: 16000.000 kHz
; 0000 004F // Mode: Fast PWM top=ICR1
; 0000 0050 // OC1A output: Non-Inv.
; 0000 0051 // OC1B output: Non-Inv.
; 0000 0052 // Noise Canceler: Off
; 0000 0053 // Input Capture on Falling Edge
; 0000 0054 // Timer1 Overflow Interrupt: Off
; 0000 0055 // Input Capture Interrupt: Off
; 0000 0056 // Compare A Match Interrupt: Off
; 0000 0057 // Compare B Match Interrupt: Off
; 0000 0058 TCCR1A=0xA2;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0059 TCCR1B=0x19;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 005A TCNT1H=0x00;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 005B TCNT1L=0x00;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 005C ICR1H=0x1F;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 005D ICR1L=0x40;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 005E OCR1AH=0x00;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 005F OCR1AL=0x00;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0060 OCR1BH=0x00;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0061 OCR1BL=0x00;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0062 
; 0000 0063 // Timer/Counter 2 initialization
; 0000 0064 // Clock source: System Clock
; 0000 0065 // Clock value: Timer2 Stopped
; 0000 0066 // Mode: Normal top=0xFF
; 0000 0067 // OC2 output: Disconnected
; 0000 0068 ASSR=0x00;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0069 TCCR2=0x00;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 006A TCNT2=0x00;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 006B OCR2=0x00;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 006C 
; 0000 006D // External Interrupt(s) initialization
; 0000 006E // INT0: Off
; 0000 006F // INT1: Off
; 0000 0070 // INT2: Off
; 0000 0071 MCUCR=0x00;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0072 MCUCSR=0x00;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0073 
; 0000 0074 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0075 TIMSK=0x00;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0076 
; 0000 0077 // USART initialization
; 0000 0078 // USART disabled
; 0000 0079 UCSRB=0x00;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 007A 
; 0000 007B // Analog Comparator initialization
; 0000 007C // Analog Comparator: Off
; 0000 007D // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 007E ACSR=0x80;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 007F SFIOR=0x00;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0080 
; 0000 0081 // ADC initialization
; 0000 0082 // ADC disabled
; 0000 0083 ADCSRA=0x00;
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0084 
; 0000 0085 // SPI initialization
; 0000 0086 // SPI disabled
; 0000 0087 SPCR=0x00;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0088 
; 0000 0089 // TWI initialization
; 0000 008A // TWI disabled
; 0000 008B TWCR=0x00;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 008C ICR1=8000;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 008D Forward(2000,2000);
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 008E delay_ms(400);
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 008F Stop();
;PCODE: $0000005C VOL: 0
; 0000 0090 x=0;
;PCODE: $0000005D VOL: 0
; 0000 0091 while (1)
;PCODE: $0000005E VOL: 0
; 0000 0092       {
; 0000 0093       // Place your code here
; 0000 0094       //FirstRoad();
; 0000 0095       //Forward(VT11,VT22);
; 0000 0096       //FirstRoad2();
; 0000 0097       if(x==0)
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 0098        FirstRoad2();
;PCODE: $00000061 VOL: 0
; 0000 0099       if(x==1)
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 009A        Rol();
;PCODE: $00000066 VOL: 0
; 0000 009B       if(x==2)
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 009C        FirstRoad3();
;PCODE: $0000006B VOL: 0
; 0000 009D       }
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 009E }
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
